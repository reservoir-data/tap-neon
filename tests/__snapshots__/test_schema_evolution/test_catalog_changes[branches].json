{
  "key_properties": [
    "id"
  ],
  "metadata": [
    {
      "breadcrumb": [
        "properties",
        "id"
      ],
      "metadata": {
        "inclusion": "automatic"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "project_id"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "parent_id"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "parent_lsn"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "parent_timestamp"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "name"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "current_state"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "pending_state"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "state_changed_at"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "logical_size"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "creation_source"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "primary"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "default"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "protected"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "cpu_used_sec"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "compute_time_seconds"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "active_time_seconds"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "written_data_bytes"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "data_transfer_bytes"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "created_at"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "updated_at"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "ttl_interval_seconds"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "expires_at"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "last_reset_at"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "created_by"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "created_by",
        "properties",
        "name"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "created_by",
        "properties",
        "image"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "init_source"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "restore_status"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "restored_from"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "restored_as"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "restricted_actions"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [],
      "metadata": {
        "inclusion": "available",
        "selected": true,
        "selected-by-default": true,
        "table-key-properties": [
          "id"
        ]
      }
    }
  ],
  "replication_method": "FULL_TABLE",
  "schema": {
    "properties": {
      "active_time_seconds": {
        "format": "int64",
        "type": [
          "integer",
          "null"
        ]
      },
      "compute_time_seconds": {
        "format": "int64",
        "type": [
          "integer",
          "null"
        ]
      },
      "cpu_used_sec": {
        "deprecated": true,
        "description": "CPU seconds used by all of the branch's compute endpoints, including deleted ones.\nThis value is reset at the beginning of each billing period.\nExamples:\n1. A branch that uses 1 CPU for 1 second is equal to `cpu_used_sec=1`.\n2. A branch that uses 2 CPUs simultaneously for 1 second is equal to `cpu_used_sec=2`.\n",
        "format": "int64",
        "type": [
          "integer",
          "null"
        ]
      },
      "created_at": {
        "description": "A timestamp indicating when the branch was created\n",
        "format": "date-time",
        "type": [
          "string",
          "null"
        ]
      },
      "created_by": {
        "description": "The resolved user model that contains details of the user/org/integration/api_key used for branch creation. This field is filled only in listing/get/create/get/update/delete methods, if it is empty when calling other handlers, it does not mean that it is empty in the system.\n",
        "properties": {
          "image": {
            "description": "The URL to the user's avatar image.",
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "description": "The name of the user.",
            "type": [
              "string",
              "null"
            ]
          }
        },
        "type": [
          "object",
          "null"
        ]
      },
      "creation_source": {
        "description": "The branch creation source\n",
        "type": [
          "string",
          "null"
        ]
      },
      "current_state": {
        "description": "The branch’s state, indicating if it is initializing, ready for use, or archived.\n  * 'init' - the branch is being created but is not available for querying.\n  * 'resetting' - the branch is being reset to a specific point in time or LSN and is not yet available for querying.\n  * 'ready' - the branch is fully operational and ready for querying. Expect normal query response times.\n  * 'archived' - the branch is stored in cost-effective archival storage. Expect slow query response times.\n",
        "type": [
          "string",
          "null"
        ]
      },
      "data_transfer_bytes": {
        "format": "int64",
        "type": [
          "integer",
          "null"
        ]
      },
      "default": {
        "description": "Whether the branch is the project's default branch\n",
        "type": [
          "boolean",
          "null"
        ]
      },
      "expires_at": {
        "description": "The timestamp when the branch is scheduled to expire and be automatically deleted. Must be set by the client following the [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6) format with precision up to seconds (such as 2025-06-09T18:02:16Z). Deletion is performed by a background job and may not occur exactly at the specified time.\n\nAccess to this feature is currently limited to participants in the Early Access Program.\n",
        "format": "date-time",
        "type": [
          "string",
          "null"
        ]
      },
      "id": {
        "description": "The branch ID. This value is generated when a branch is created. A `branch_id` value has a `br` prefix. For example: `br-small-term-683261`.\n",
        "pattern": "^[a-z0-9-]{1,60}$",
        "type": [
          "string",
          "null"
        ]
      },
      "init_source": {
        "description": "The source of initialization for the branch. Valid values are `schema-only` and `parent-data` (default).\n  * `schema-only` - creates a new root branch containing only the schema. Use `parent_id` to specify the source branch. Optionally, you can provide `parent_lsn` or `parent_timestamp` to branch from a specific point in time or LSN. These fields define which branch to copy the schema from and at what point—they do not establish a parent-child relationship between the `parent_id` branch and the new schema-only branch.\n  * `parent-data` - creates the branch with both schema and data from the parent.\n",
        "type": [
          "string",
          "null"
        ]
      },
      "last_reset_at": {
        "description": "A timestamp indicating when the branch was last reset\n",
        "format": "date-time",
        "type": [
          "string",
          "null"
        ]
      },
      "logical_size": {
        "description": "The logical size of the branch, in bytes\n",
        "format": "int64",
        "type": [
          "integer",
          "null"
        ]
      },
      "name": {
        "description": "The branch name\n",
        "type": [
          "string",
          "null"
        ]
      },
      "parent_id": {
        "description": "The `branch_id` of the parent branch\n",
        "pattern": "^[a-z0-9-]{1,60}$",
        "type": [
          "string",
          "null"
        ]
      },
      "parent_lsn": {
        "description": "The Log Sequence Number (LSN) on the parent branch from which this branch was created.\nWhen restoring a branch using the [Restore branch](https://api-docs.neon.tech/reference/restoreprojectbranch) endpoint,\nthis value isn’t finalized until all operations related to the restore have completed successfully.\n",
        "type": [
          "string",
          "null"
        ]
      },
      "parent_timestamp": {
        "description": "The point in time on the parent branch from which this branch was created.\nWhen restoring a branch using the [Restore branch](https://api-docs.neon.tech/reference/restoreprojectbranch) endpoint,\nthis value isn’t finalized until all operations related to the restore have completed successfully.\nAfter all the operations completed, this value might stay empty.\n",
        "format": "date-time",
        "type": [
          "string",
          "null"
        ]
      },
      "pending_state": {
        "description": "The branch’s state, indicating if it is initializing, ready for use, or archived.\n  * 'init' - the branch is being created but is not available for querying.\n  * 'resetting' - the branch is being reset to a specific point in time or LSN and is not yet available for querying.\n  * 'ready' - the branch is fully operational and ready for querying. Expect normal query response times.\n  * 'archived' - the branch is stored in cost-effective archival storage. Expect slow query response times.\n",
        "type": [
          "string",
          "null"
        ]
      },
      "primary": {
        "deprecated": true,
        "description": "DEPRECATED. Use `default` field.\nWhether the branch is the project's primary branch\n",
        "type": [
          "boolean",
          "null"
        ]
      },
      "project_id": {
        "description": "The ID of the project to which the branch belongs\n",
        "pattern": "^[a-z0-9-]{1,60}$",
        "type": [
          "string",
          "null"
        ]
      },
      "protected": {
        "description": "Whether the branch is protected\n",
        "type": [
          "boolean",
          "null"
        ]
      },
      "restore_status": {
        "description": "Could be `restored`, `finalized` or `detaching`.\nA `restored` branch becomes permanently `finalized` when you call `finalizeRestoreBranch`\nA `restored` or `finalized` branch may begin `detaching` as a one-time performance optimisation, after which it will continue in its original state\n",
        "type": [
          "string",
          "null"
        ]
      },
      "restored_as": {
        "description": "ID of the target branch which was replaced when this branch was restored\n",
        "type": [
          "string",
          "null"
        ]
      },
      "restored_from": {
        "description": "ID of the snapshot that was the restore source for this branch\n",
        "type": [
          "string",
          "null"
        ]
      },
      "restricted_actions": {
        "description": "A list of actions that are currently restricted for this branch and the reason why.\n",
        "items": {
          "description": "An action that is currently restricted for the branch and the reason why.\n",
          "properties": {
            "name": {
              "description": "The name of a restricted action. Possible values include `restore`, `delete-rw-endpoint`.\n",
              "type": "string"
            },
            "reason": {
              "description": "A human-readable explanation of why the action is restricted.\n",
              "type": "string"
            }
          },
          "required": [
            "name",
            "reason"
          ],
          "type": "object"
        },
        "type": [
          "array",
          "null"
        ]
      },
      "state_changed_at": {
        "description": "A UTC timestamp indicating when the `current_state` began\n",
        "format": "date-time",
        "type": [
          "string",
          "null"
        ]
      },
      "ttl_interval_seconds": {
        "description": "The time-to-live (TTL) duration originally configured for the branch, in seconds. This read-only value represents the interval between the time `expires_at` was set and the expiration timestamp itself. It is preserved to ensure the same TTL duration is reapplied when resetting the branch from its parent, and only updates when a new `expires_at` value is set.\n\nAccess to this feature is currently limited to participants in the Early Access Program.\n",
        "type": [
          "integer",
          "null"
        ]
      },
      "updated_at": {
        "description": "A timestamp indicating when the branch was last updated\n",
        "format": "date-time",
        "type": [
          "string",
          "null"
        ]
      },
      "written_data_bytes": {
        "format": "int64",
        "type": [
          "integer",
          "null"
        ]
      }
    },
    "required": [
      "id",
      "project_id",
      "name",
      "current_state",
      "state_changed_at",
      "creation_source",
      "created_at",
      "updated_at",
      "default",
      "protected",
      "cpu_used_sec",
      "active_time_seconds",
      "compute_time_seconds",
      "written_data_bytes",
      "data_transfer_bytes"
    ],
    "type": "object"
  },
  "stream": "branches",
  "tap_stream_id": "branches"
}
