{
  "key_properties": [
    "id"
  ],
  "metadata": [
    {
      "breadcrumb": [
        "properties",
        "id"
      ],
      "metadata": {
        "inclusion": "automatic"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "platform_id"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "region_id"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "name"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "provisioner"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "default_endpoint_settings"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "default_endpoint_settings",
        "properties",
        "pg_settings"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "default_endpoint_settings",
        "properties",
        "pgbouncer_settings"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "default_endpoint_settings",
        "properties",
        "autoscaling_limit_min_cu"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "default_endpoint_settings",
        "properties",
        "autoscaling_limit_max_cu"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "default_endpoint_settings",
        "properties",
        "suspend_timeout_seconds"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "quota"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "quota",
        "properties",
        "active_time_seconds"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "quota",
        "properties",
        "compute_time_seconds"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "quota",
        "properties",
        "written_data_bytes"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "quota",
        "properties",
        "data_transfer_bytes"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "quota",
        "properties",
        "logical_size_bytes"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "allowed_ips"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "allowed_ips",
        "properties",
        "ips"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "allowed_ips",
        "properties",
        "protected_branches_only"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "enable_logical_replication"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "maintenance_window"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "maintenance_window",
        "properties",
        "weekdays"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "maintenance_window",
        "properties",
        "start_time"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "maintenance_window",
        "properties",
        "end_time"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "block_public_connections"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "block_vpc_connections"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "audit_log_level"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "hipaa"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "preload_libraries"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "preload_libraries",
        "properties",
        "use_defaults"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "settings",
        "properties",
        "preload_libraries",
        "properties",
        "enabled_libraries"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "pg_version"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "proxy_host"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "branch_logical_size_limit"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "branch_logical_size_limit_bytes"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "store_passwords"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "active_time"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "cpu_used_sec"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "maintenance_starts_at"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "creation_source"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "created_at"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "updated_at"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "synthetic_storage_size"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "quota_reset_at"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "owner_id"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "compute_last_active_at"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "org_id"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "org_name"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "history_retention_seconds"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [
        "properties",
        "hipaa_enabled_at"
      ],
      "metadata": {
        "inclusion": "available"
      }
    },
    {
      "breadcrumb": [],
      "metadata": {
        "inclusion": "available",
        "selected": true,
        "selected-by-default": true,
        "table-key-properties": [
          "id"
        ]
      }
    }
  ],
  "replication_method": "FULL_TABLE",
  "schema": {
    "description": "Essential data about the project. Full data is available at the getProject endpoint.\n",
    "properties": {
      "active_time": {
        "description": "Control plane observed endpoints of this project being active this amount of wall-clock time.\n",
        "format": "int64",
        "minimum": 0,
        "type": [
          "integer",
          "null"
        ]
      },
      "branch_logical_size_limit": {
        "description": "The logical size limit for a branch. The value is in MiB.\n",
        "format": "int64",
        "type": [
          "integer",
          "null"
        ]
      },
      "branch_logical_size_limit_bytes": {
        "description": "The logical size limit for a branch. The value is in B.\n",
        "format": "int64",
        "type": [
          "integer",
          "null"
        ]
      },
      "compute_last_active_at": {
        "description": "The most recent time when any endpoint of this project was active.\n\nOmitted when observed no activity for endpoints of this project.\n",
        "format": "date-time",
        "type": [
          "string",
          "null"
        ]
      },
      "cpu_used_sec": {
        "deprecated": true,
        "description": "DEPRECATED. Use data from the getProject endpoint instead.\n",
        "format": "int64",
        "type": [
          "integer",
          "null"
        ]
      },
      "created_at": {
        "description": "A timestamp indicating when the project was created\n",
        "format": "date-time",
        "type": [
          "string",
          "null"
        ]
      },
      "creation_source": {
        "description": "The project creation source\n",
        "type": [
          "string",
          "null"
        ]
      },
      "default_endpoint_settings": {
        "description": "A collection of settings for a Neon endpoint",
        "properties": {
          "autoscaling_limit_max_cu": {
            "description": "The maximum number of Compute Units. See [Compute size and Autoscaling configuration](https://neon.tech/docs/manage/endpoints#compute-size-and-autoscaling-configuration)\nfor more information.\n",
            "minimum": 0,
            "type": [
              "number",
              "null"
            ]
          },
          "autoscaling_limit_min_cu": {
            "description": "The minimum number of Compute Units. The minimum value is `0.25`.\nSee [Compute size and Autoscaling configuration](https://neon.tech/docs/manage/endpoints#compute-size-and-autoscaling-configuration)\nfor more information.\n",
            "minimum": 0,
            "type": [
              "number",
              "null"
            ]
          },
          "pg_settings": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A raw representation of Postgres settings",
            "type": [
              "object",
              "null"
            ]
          },
          "pgbouncer_settings": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A raw representation of PgBouncer settings",
            "type": [
              "object",
              "null"
            ]
          },
          "suspend_timeout_seconds": {
            "description": "Duration of inactivity in seconds after which the compute endpoint is\nautomatically suspended. The value `0` means use the default value.\nThe value `-1` means never suspend. The default value is `300` seconds (5 minutes).\nThe minimum value is `60` seconds (1 minute).\nThe maximum value is `604800` seconds (1 week). For more information, see\n[Scale to zero configuration](https://neon.tech/docs/manage/endpoints#scale-to-zero-configuration).\n",
            "format": "int64",
            "maximum": 604800,
            "minimum": -1,
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "type": [
          "object",
          "null"
        ]
      },
      "hipaa_enabled_at": {
        "description": "A timestamp indicating when HIPAA was enabled for this project",
        "format": "date-time",
        "type": [
          "string",
          "null"
        ]
      },
      "history_retention_seconds": {
        "description": "The number of seconds to retain the shared history for all branches in this project.\n",
        "format": "int32",
        "type": [
          "integer",
          "null"
        ]
      },
      "id": {
        "description": "The project ID",
        "pattern": "^[a-z0-9-]{1,60}$",
        "type": [
          "string",
          "null"
        ]
      },
      "maintenance_starts_at": {
        "description": "A timestamp indicating when project maintenance begins. If set, the project is placed into maintenance mode at this time.\n",
        "format": "date-time",
        "type": [
          "string",
          "null"
        ]
      },
      "name": {
        "description": "The project name\n",
        "type": [
          "string",
          "null"
        ]
      },
      "org_id": {
        "description": "Organization id if the project belongs to an organization.\nPermissions for the project will be given to organization members as defined by the organization admins.\nThe permissions of the project do not depend on the user that created the project if a project belongs to an organization.\n",
        "pattern": "^[a-z0-9-]{1,60}$",
        "type": [
          "string",
          "null"
        ]
      },
      "org_name": {
        "description": "Organization name if the project belongs to an organization.\n",
        "type": [
          "string",
          "null"
        ]
      },
      "owner_id": {
        "type": [
          "string",
          "null"
        ]
      },
      "pg_version": {
        "default": 17,
        "description": "The major Postgres version number. Currently supported versions are `14`, `15`, `16`, `17`, and `18`.",
        "maximum": 18,
        "minimum": 14,
        "type": [
          "integer",
          "null"
        ]
      },
      "platform_id": {
        "description": "The cloud platform identifier. Currently, only AWS is supported, for which the identifier is `aws`.\n",
        "type": [
          "string",
          "null"
        ]
      },
      "provisioner": {
        "description": "The Neon compute provisioner.\nSpecify the `k8s-neonvm` provisioner to create a compute endpoint that supports Autoscaling.\n\nProvisioner can be one of the following values:\n* k8s-pod\n* k8s-neonvm\n\nClients must expect, that any string value that is not documented in the description above should be treated as a error. UNKNOWN value if safe to treat as an error too.\n",
        "type": [
          "string",
          "null"
        ]
      },
      "proxy_host": {
        "description": "The proxy host for the project. This value combines the `region_id`, the `platform_id`, and the Neon domain (`neon.tech`).\n",
        "type": [
          "string",
          "null"
        ]
      },
      "quota_reset_at": {
        "deprecated": true,
        "description": "DEPRECATED. Use `consumption_period_end` from the getProject endpoint instead.\nA timestamp indicating when the project quota resets\n",
        "format": "date-time",
        "type": [
          "string",
          "null"
        ]
      },
      "region_id": {
        "description": "The region identifier\n",
        "type": [
          "string",
          "null"
        ]
      },
      "settings": {
        "properties": {
          "allowed_ips": {
            "description": "A list of IP addresses that are allowed to connect to the compute endpoint.\nIf the list is empty or not set, all IP addresses are allowed.\nIf protected_branches_only is true, the list will be applied only to protected branches.\n",
            "properties": {
              "ips": {
                "description": "A list of IP addresses that are allowed to connect to the endpoint.",
                "items": {
                  "type": "string"
                },
                "type": [
                  "array",
                  "null"
                ]
              },
              "protected_branches_only": {
                "description": "If true, the list will be applied only to protected branches.",
                "type": [
                  "boolean",
                  "null"
                ]
              }
            },
            "type": [
              "object",
              "null"
            ]
          },
          "audit_log_level": {
            "enum": [
              "base",
              "extended",
              "full"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "block_public_connections": {
            "description": "When set, connections from the public internet\nare disallowed. This supersedes the AllowedIPs list.\nThis parameter is under active development and its semantics may change in the future.\n",
            "type": [
              "boolean",
              "null"
            ]
          },
          "block_vpc_connections": {
            "description": "When set, connections using VPC endpoints are disallowed.\nThis parameter is under active development and its semantics may change in the future.\n",
            "type": [
              "boolean",
              "null"
            ]
          },
          "enable_logical_replication": {
            "description": "Sets wal_level=logical for all compute endpoints in this project.\nAll active endpoints will be suspended.\nOnce enabled, logical replication cannot be disabled.\n",
            "type": [
              "boolean",
              "null"
            ]
          },
          "hipaa": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "maintenance_window": {
            "description": "A maintenance window is a time period during which Neon may perform maintenance on the project's infrastructure.\nDuring this time, the project's compute endpoints may be unavailable and existing connections can be\ninterrupted.\n",
            "properties": {
              "end_time": {
                "description": "End time of the maintenance window, in the format of \"HH:MM\". Uses UTC.\n",
                "type": [
                  "string",
                  "null"
                ]
              },
              "start_time": {
                "description": "Start time of the maintenance window, in the format of \"HH:MM\". Uses UTC.\n",
                "type": [
                  "string",
                  "null"
                ]
              },
              "weekdays": {
                "description": "A list of weekdays when the maintenance window is active.\nEncoded as ints, where 1 - Monday, and 7 - Sunday.\n",
                "items": {
                  "type": "integer"
                },
                "type": [
                  "array",
                  "null"
                ]
              }
            },
            "required": [
              "weekdays",
              "start_time",
              "end_time"
            ],
            "type": [
              "object",
              "null"
            ]
          },
          "preload_libraries": {
            "description": "The shared libraries to preload into the project's compute instances.\n",
            "properties": {
              "enabled_libraries": {
                "items": {
                  "type": "string"
                },
                "type": [
                  "array",
                  "null"
                ]
              },
              "use_defaults": {
                "type": [
                  "boolean",
                  "null"
                ]
              }
            },
            "type": [
              "object",
              "null"
            ]
          },
          "quota": {
            "description": "Per-project consumption quotas. If a quota is exceeded, all active computes\nare automatically suspended and cannot be started via API calls or incoming connections.\n\nThe exception is `logical_size_bytes`, which is enforced per branch.\nIf a branch exceeds its `logical_size_bytes` quota, computes can still be started,\nbut write operations will fail—allowing data to be deleted to free up space.\nComputes on other branches are not affected.\n\nSetting `logical_size_bytes` overrides any lower value set by the `neon.max_cluster_size` Postgres setting.\n\nQuotas are enforced using per-project consumption metrics with the same names.\nThese metrics reset at the start of each billing period. `logical_size_bytes`\nis also an exception—it reflects the total data stored in a branch and does not reset.\n\nA zero or empty quota value means “unlimited.”\n",
            "properties": {
              "active_time_seconds": {
                "description": "The total amount of wall-clock time allowed to be spent by the project's compute endpoints.\n",
                "format": "int64",
                "minimum": 0,
                "type": [
                  "integer",
                  "null"
                ]
              },
              "compute_time_seconds": {
                "description": "The total amount of CPU seconds allowed to be spent by the project's compute endpoints.\n",
                "format": "int64",
                "minimum": 0,
                "type": [
                  "integer",
                  "null"
                ]
              },
              "data_transfer_bytes": {
                "description": "Total amount of data transferred from all of a project's branches using the proxy.\n",
                "format": "int64",
                "minimum": 0,
                "type": [
                  "integer",
                  "null"
                ]
              },
              "logical_size_bytes": {
                "description": "Limit on the logical size of every project's branch.\n\nIf a branch exceeds its `logical_size_bytes` quota, computes can still be started,\nbut write operations will fail—allowing data to be deleted to free up space.\nComputes on other branches are not affected.\n\nSetting `logical_size_bytes` overrides any lower value set by the `neon.max_cluster_size` Postgres setting.\n",
                "format": "int64",
                "minimum": 0,
                "type": [
                  "integer",
                  "null"
                ]
              },
              "written_data_bytes": {
                "description": "Total amount of data written to all of a project's branches.\n",
                "format": "int64",
                "minimum": 0,
                "type": [
                  "integer",
                  "null"
                ]
              }
            },
            "type": [
              "object",
              "null"
            ]
          }
        },
        "type": [
          "object",
          "null"
        ]
      },
      "store_passwords": {
        "description": "Whether or not passwords are stored for roles in the Neon project. Storing passwords facilitates access to Neon features that require authorization.\n",
        "type": [
          "boolean",
          "null"
        ]
      },
      "synthetic_storage_size": {
        "description": "The current space occupied by the project in storage, in bytes. Synthetic storage size combines the logical data size and Write-Ahead Log (WAL) size for all branches in a project.\n",
        "format": "int64",
        "type": [
          "integer",
          "null"
        ]
      },
      "updated_at": {
        "description": "A timestamp indicating when the project was last updated\n",
        "format": "date-time",
        "type": [
          "string",
          "null"
        ]
      }
    },
    "required": [
      "active_time",
      "id",
      "platform_id",
      "region_id",
      "name",
      "pg_version",
      "proxy_host",
      "branch_logical_size_limit",
      "branch_logical_size_limit_bytes",
      "provisioner",
      "store_passwords",
      "cpu_used_sec",
      "creation_source",
      "created_at",
      "updated_at",
      "owner_id"
    ],
    "type": "object"
  },
  "stream": "projects",
  "tap_stream_id": "projects"
}
